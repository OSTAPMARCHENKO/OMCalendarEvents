{\rtf1\ansi\ansicpg1251\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sl480\slmult1\pardirnatural\partightenfactor0

\f0\fs24 \cf0 1. - 
\f1 https://console.developers.google.com/
\f0  - create new project with current app Bundle ID
\f1\fs22 \
\

\f0\fs24 2. - Go to dashboard, click Enable APIS AND SERVICES, choose calendar API service and enable it
\f1\fs22 \
\

\f0\fs24 3. - Choose credentials from the side menu and click 'CREATE CREDENTIALS' Link from top of the page and add OAuth Client ID
\f1\fs22 \
\

\f0\fs24 4. - Go to the Firebase console, ADD new project with exiting app
\f1\fs22 \
\

\f0\fs24 5. -  Add firebase google plist to current app
\f1\fs22 \
\

\f0\fs24 6.  ***ATTENTION*** Add to your signIn method this options, if application using GoogleSignIn
\f1 \
	
\f0 GIDSignIn.sharedInstance().scopes = 
\f1 [https://www.googleapis.com/auth/calendar
\fs22 ", "
\fs24 https://www.googleapis.com/auth/calendar.events]
\fs22 \

\fs24  '
\f0 scopes' options are REQUIRED!
\f1\fs22  - 
\f0\fs24 Without them, you will not have access to the  Google calendar}